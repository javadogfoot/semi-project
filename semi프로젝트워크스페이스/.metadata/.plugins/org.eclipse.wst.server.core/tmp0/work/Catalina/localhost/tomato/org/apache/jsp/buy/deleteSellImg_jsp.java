/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.70
 * Generated at: 2021-10-15 09:14:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.buy;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.oreilly.servlet.*;
import java.net.*;
import java.io.*;

public final class deleteSellImg_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("com.oreilly.servlet");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.net");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

request.setCharacterEncoding("UTF-8");

      out.write('\r');
      out.write('\n');
      tomato.sell.SellDTO sdto = null;
      sdto = (tomato.sell.SellDTO) _jspx_page_context.getAttribute("sdto", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (sdto == null){
        sdto = new tomato.sell.SellDTO();
        _jspx_page_context.setAttribute("sdto", sdto, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("sdto"), request);
      out.write('\r');
      out.write('\n');
      tomato.sell.SellDAO sdao = null;
      sdao = (tomato.sell.SellDAO) _jspx_page_context.getAttribute("sdao", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (sdao == null){
        sdao = new tomato.sell.SellDAO();
        _jspx_page_context.setAttribute("sdao", sdao, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');

String imgPath=request.getParameter("imgPath");
String delImgPort=request.getParameter("delImgPort");
String filePort=request.getParameter("filePort");
String m_id=request.getParameter("m_id");
File f=new File(delImgPort);
Boolean result=sdao.deleteImg(f);
if(!result){
	
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("	window.alert('사진 삭제가 불가능합니다.');\r\n");
      out.write("	location.href='/tomato/buy/buyContent.jsp?s_idx=");
      out.print(sdto.getS_idx());
      out.write("';\r\n");
      out.write("	</script>\r\n");
      out.write("	");

	return;
}else{
	File f2=new File(filePort);
	File files[]=f2.listFiles();
	String filePath="";
	String middlePath="/"+m_id+"/"+sdto.getS_idx()+"/";
	if(files.length==1){
		filePath=sdao.IMAGE_ROOT+middlePath+files[0].getName();
	}else{
		for(int i=0;i<files.length;i++){
			if(i!=files.length-1){
				filePath=filePath+(sdao.IMAGE_ROOT+middlePath+files[i].getName()+", ");
			}
			else if(i==files.length-1){
				filePath=filePath+(sdao.IMAGE_ROOT+middlePath+files[i].getName());
			}
		}
	}
	sdao.updateImg(sdto.getS_idx(), filePath);
}

      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("location.href='/tomato/buy/buyContent.jsp?s_idx=");
      out.print(sdto.getS_idx());
      out.write("';\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
